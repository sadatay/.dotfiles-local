
:tanat

"29.2"

#s(hash-table size 217 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("org-elpa" ("2024-12-12 15:15:50" nil (:local-repo nil :package "org-elpa" :type git)) "melpa" ("2024-12-12 15:15:50" nil (:type git :host github :repo "melpa/melpa" :build nil :package "melpa" :local-repo "melpa")) "nongnu-elpa" ("2024-12-12 15:16:29" nil (:type git :repo "https://git.savannah.gnu.org/git/emacs/nongnu.git" :local-repo "nongnu-elpa" :build nil :package "nongnu-elpa")) "gnu-elpa-mirror" ("2024-12-12 15:16:29" nil (:type git :host github :repo "emacs-straight/gnu-elpa-mirror" :build nil :package "gnu-elpa-mirror" :local-repo "gnu-elpa-mirror")) "el-get" ("2024-12-12 15:16:29" nil (:type git :host github :repo "dimitri/el-get" :build nil :files ("*.el" ("recipes" "recipes/el-get.rcp") "methods" "el-get-pkg.el") :flavor melpa :package "el-get" :local-repo "el-get")) "emacsmirror-mirror" ("2024-12-12 15:16:29" nil (:type git :host github :repo "emacs-straight/emacsmirror-mirror" :build nil :package "emacsmirror-mirror" :local-repo "emacsmirror-mirror")) "company-dict" ("2024-12-12 15:15:50" ("emacs" "company" "parent-mode") (:type git :flavor melpa :host github :repo "hlissner/emacs-company-dict" :package "company-dict" :local-repo "emacs-company-dict")) "company" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :files (:defaults "icons" ("images/small" "doc/images/small/*.png") "company-pkg.el") :host github :repo "company-mode/company-mode" :package "company" :local-repo "company-mode")) "parent-mode" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "Fanael/parent-mode" :package "parent-mode" :local-repo "parent-mode")) "wgrep" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :files ("wgrep.el" "wgrep-pkg.el") :host github :repo "mhayashi1120/Emacs-wgrep" :package "wgrep" :local-repo "Emacs-wgrep")) "marginalia" ("2024-12-12 15:15:50" ("emacs" "compat") (:type git :flavor melpa :host github :repo "minad/marginalia" :package "marginalia" :local-repo "marginalia")) "compat" ("2024-12-12 15:15:50" ("emacs" "seq") (:host github :repo "emacs-compat/compat" :files ("*" (:exclude ".git")) :package "compat" :type git :local-repo "compat")) "seq" ("2024-12-12 15:15:50" nil (:type git :host github :repo "emacs-straight/seq" :files ("*" (:exclude ".git")) :package "seq" :local-repo "seq")) "embark-consult" ("2024-12-12 15:15:50" ("emacs" "compat" "embark" "consult") (:flavor melpa :files ("embark-consult.el" "embark-consult-pkg.el") :package "embark-consult" :local-repo "embark" :type git :repo "oantolin/embark" :host github)) "embark" ("2024-12-12 15:15:50" ("emacs" "compat") (:type git :flavor melpa :files ("embark.el" "embark-org.el" "embark.texi" "embark-pkg.el") :host github :repo "oantolin/embark" :package "embark" :local-repo "embark")) "consult" ("2024-12-12 15:15:50" ("emacs" "compat") (:type git :flavor melpa :host github :repo "minad/consult" :package "consult" :local-repo "consult")) "consult-flycheck" ("2024-12-12 15:15:50" ("emacs" "consult" "flycheck") (:type git :flavor melpa :host github :repo "minad/consult-flycheck" :package "consult-flycheck" :local-repo "consult-flycheck")) "flycheck" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "flycheck/flycheck" :package "flycheck" :local-repo "flycheck")) "consult-dir" ("2024-12-12 15:15:50" ("emacs" "consult") (:type git :flavor melpa :host github :repo "karthink/consult-dir" :package "consult-dir" :local-repo "consult-dir")) "orderless" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "oantolin/orderless" :package "orderless" :local-repo "orderless")) "vertico" ("2024-12-12 15:15:50" ("emacs" "compat") (:type git :flavor melpa :files (:defaults "extensions/vertico-*.el" "vertico-pkg.el") :host github :repo "minad/vertico" :package "vertico" :local-repo "vertico")) "solaire-mode" ("2024-12-12 15:15:50" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "hlissner/emacs-solaire-mode" :package "solaire-mode" :local-repo "emacs-solaire-mode")) "doom-themes" ("2024-12-12 15:15:50" ("emacs" "cl-lib") (:type git :flavor melpa :files (:defaults "themes/*.el" "themes/*/*.el" "extensions/*.el" "doom-themes-pkg.el") :host github :repo "doomemacs/themes" :package "doom-themes" :local-repo "themes")) "hl-todo" ("2024-12-12 15:15:50" ("emacs" "compat") (:type git :flavor melpa :host github :repo "tarsius/hl-todo" :package "hl-todo" :local-repo "hl-todo")) "anzu" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/anzu" :package "anzu" :local-repo "anzu")) "doom-modeline" ("2024-12-12 15:15:50" ("emacs" "compat" "nerd-icons" "shrink-path") (:type git :flavor melpa :host github :repo "seagle0128/doom-modeline" :package "doom-modeline" :local-repo "doom-modeline")) "nerd-icons" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :files (:defaults "data" "nerd-icons-pkg.el") :host github :repo "rainstormstudio/nerd-icons.el" :package "nerd-icons" :local-repo "nerd-icons.el")) "shrink-path" ("2024-12-12 15:15:50" ("emacs" "s" "dash" "f") (:type git :flavor melpa :host gitlab :repo "bennya/shrink-path.el" :package "shrink-path" :local-repo "shrink-path.el")) "s" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "magnars/s.el" :package "s" :local-repo "s.el")) "dash" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :files ("dash.el" "dash.texi" "dash-pkg.el") :host github :repo "magnars/dash.el" :package "dash" :local-repo "dash.el")) "f" ("2024-12-12 15:15:50" ("emacs" "s" "dash") (:type git :flavor melpa :host github :repo "rejeep/f.el" :package "f" :local-repo "f.el")) "git-gutter-fringe" ("2024-12-12 15:15:50" ("git-gutter" "fringe-helper" "cl-lib" "emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/git-gutter-fringe" :package "git-gutter-fringe" :local-repo "git-gutter-fringe")) "git-gutter" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/git-gutter" :package "git-gutter" :local-repo "git-gutter")) "fringe-helper" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "nschum/fringe-helper.el" :package "fringe-helper" :local-repo "fringe-helper.el")) "vi-tilde-fringe" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "syl20bnr/vi-tilde-fringe" :package "vi-tilde-fringe" :local-repo "vi-tilde-fringe")) "expand-region" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "magnars/expand-region.el" :package "expand-region" :local-repo "expand-region.el")) "avy" ("2024-12-12 15:15:50" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "abo-abo/avy" :package "avy" :local-repo "avy")) "vimish-fold" ("2024-12-12 15:15:50" ("emacs" "cl-lib" "f") (:type git :flavor melpa :host github :repo "matsievskiysv/vimish-fold" :package "vimish-fold" :local-repo "vimish-fold")) "doom-snippets" ("2024-12-12 15:15:50" ("emacs" "cl-lib" "yasnippet") (:host github :repo "doomemacs/snippets" :files (:defaults "*") :package "doom-snippets" :type git :local-repo "snippets")) "yasnippet" ("2024-12-12 15:15:50" ("cl-lib" "emacs") (:type git :flavor melpa :files ("yasnippet.el" "snippets" "yasnippet-pkg.el") :host github :repo "joaotavora/yasnippet" :package "yasnippet" :local-repo "yasnippet")) "auto-yasnippet" ("2024-12-12 15:15:50" ("yasnippet" "emacs") (:type git :flavor melpa :host github :repo "abo-abo/auto-yasnippet" :package "auto-yasnippet" :local-repo "auto-yasnippet")) "fd-dired" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "yqrashawn/fd-dired" :package "fd-dired" :local-repo "fd-dired")) "dired-rsync" ("2024-12-12 15:15:50" ("s" "dash" "emacs") (:type git :flavor melpa :files ("dired-rsync.el" "dired-rsync-pkg.el") :host github :repo "stsquad/dired-rsync" :package "dired-rsync" :local-repo "dired-rsync")) "dired-git-info" ("2024-12-12 15:15:50" ("emacs") (:type git :host github :repo "emacs-straight/dired-git-info" :files ("*" (:exclude ".git")) :package "dired-git-info" :local-repo "dired-git-info")) "diredfl" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "purcell/diredfl" :package "diredfl" :local-repo "diredfl")) "vundo" ("2024-12-12 15:15:50" ("emacs") (:type git :host github :repo "emacs-straight/vundo" :files ("*" (:exclude ".git")) :package "vundo" :local-repo "vundo")) "undo-fu-session" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host codeberg :repo "ideasman42/emacs-undo-fu-session" :package "undo-fu-session" :local-repo "emacs-undo-fu-session")) "undo-fu" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host codeberg :repo "ideasman42/emacs-undo-fu" :package "undo-fu" :local-repo "emacs-undo-fu")) "git-modes" ("2024-12-12 15:15:50" ("emacs" "compat") (:type git :flavor melpa :host github :repo "magit/git-modes" :package "git-modes" :local-repo "git-modes")) "git-timemachine" ("2024-12-12 15:15:50" ("emacs" "transient") (:host github :repo "emacsmirror/git-timemachine" :flavor melpa :package "git-timemachine" :type git :local-repo "git-timemachine")) "transient" ("2024-12-12 15:15:50" ("emacs" "compat" "seq") (:type git :flavor melpa :host github :repo "magit/transient" :package "transient" :local-repo "transient")) "git-commit" ("2024-12-12 15:15:50" ("emacs" "compat" "transient" "with-editor") (:type git :flavor melpa :files ("lisp/git-commit.el" "lisp/git-commit-pkg.el" "git-commit-pkg.el") :host github :repo "magit/magit" :package "git-commit" :local-repo "magit")) "with-editor" ("2024-12-12 15:15:50" ("emacs" "compat") (:type git :flavor melpa :host github :repo "magit/with-editor" :package "with-editor" :local-repo "with-editor")) "browse-at-remote" ("2024-12-12 15:15:50" ("f" "s" "cl-lib") (:type git :flavor melpa :host github :repo "rmuslimov/browse-at-remote" :package "browse-at-remote" :local-repo "browse-at-remote")) "flycheck-popup-tip" ("2024-12-12 15:15:50" ("flycheck" "popup" "emacs") (:type git :flavor melpa :host github :repo "flycheck/flycheck-popup-tip" :package "flycheck-popup-tip" :local-repo "flycheck-popup-tip")) "popup" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "auto-complete/popup-el" :package "popup" :local-repo "popup-el")) "eros" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "xiongtx/eros" :package "eros" :local-repo "eros")) "quickrun" ("2024-12-12 15:15:50" ("emacs" "ht") (:type git :flavor melpa :host github :repo "emacsorphanage/quickrun" :package "quickrun" :local-repo "quickrun")) "ht" ("2024-12-12 15:15:50" ("dash") (:type git :flavor melpa :host github :repo "Wilfred/ht.el" :package "ht" :local-repo "ht.el")) "request" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :files ("request.el" "request-pkg.el") :host github :repo "tkf/emacs-request" :package "request" :local-repo "emacs-request")) "dumb-jump" ("2024-12-12 15:15:50" ("emacs" "s" "dash" "popup") (:type git :flavor melpa :host github :repo "jacktasia/dumb-jump" :package "dumb-jump" :local-repo "dumb-jump")) "magit-todos" ("2024-12-12 15:15:50" ("emacs" "async" "dash" "f" "hl-todo" "magit" "pcre2el" "s" "transient") (:type git :flavor melpa :host github :repo "alphapapa/magit-todos" :package "magit-todos" :local-repo "magit-todos")) "async" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "jwiegley/emacs-async" :package "async" :local-repo "emacs-async")) "magit" ("2024-12-12 15:15:50" ("emacs" "compat" "dash" "git-commit" "magit-section" "seq" "transient" "with-editor") (:flavor melpa :files ("lisp/magit*.el" "lisp/git-rebase.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" "Documentation/magit.texi" "Documentation/AUTHORS.md" (:exclude "lisp/magit-libgit.el" "lisp/magit-libgit-pkg.el" "lisp/magit-section.el" "lisp/magit-section-pkg.el") "magit-pkg.el") :package "magit" :local-repo "magit" :type git :repo "magit/magit" :host github)) "magit-section" ("2024-12-12 15:15:50" ("emacs" "compat" "dash") (:flavor melpa :files ("lisp/magit-section.el" "lisp/magit-section-pkg.el" "docs/magit-section.texi" "Documentation/magit-section.texi" "magit-section-pkg.el") :package "magit-section" :local-repo "magit" :type git :repo "magit/magit" :host github)) "pcre2el" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "joddie/pcre2el" :package "pcre2el" :local-repo "pcre2el")) "ns-auto-titlebar" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "purcell/ns-auto-titlebar" :package "ns-auto-titlebar" :local-repo "ns-auto-titlebar")) "buttercup" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :files (:defaults "bin" "buttercup-pkg.el") :host github :repo "jorgenschaefer/emacs-buttercup" :package "buttercup" :local-repo "emacs-buttercup")) "flycheck-cask" ("2024-12-12 15:15:50" ("emacs" "flycheck" "dash") (:type git :flavor melpa :host github :repo "flycheck/flycheck-cask" :package "flycheck-cask" :local-repo "flycheck-cask")) "flycheck-package" ("2024-12-12 15:15:50" ("emacs" "flycheck" "package-lint") (:type git :flavor melpa :host github :repo "purcell/flycheck-package" :package "flycheck-package" :local-repo "flycheck-package")) "package-lint" ("2024-12-12 15:15:50" ("emacs" "let-alist") (:type git :flavor melpa :files (:defaults "data" (:exclude "*flymake.el") "package-lint-pkg.el") :host github :repo "purcell/package-lint" :package "package-lint" :local-repo "package-lint")) "elisp-demos" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :files (:defaults "*.org" "elisp-demos-pkg.el") :host github :repo "xuchunyang/elisp-demos" :package "elisp-demos" :local-repo "elisp-demos")) "elisp-def" ("2024-12-12 15:15:50" ("dash" "f" "s" "emacs") (:type git :flavor melpa :host github :repo "Wilfred/elisp-def" :package "elisp-def" :local-repo "elisp-def")) "overseer" ("2024-12-12 15:15:50" ("emacs" "dash" "pkg-info" "f") (:type git :flavor melpa :host github :repo "tonini/overseer.el" :package "overseer" :local-repo "overseer.el")) "pkg-info" ("2024-12-12 15:15:50" ("epl") (:type git :flavor melpa :host github :repo "emacsorphanage/pkg-info" :package "pkg-info" :local-repo "pkg-info")) "epl" ("2024-12-12 15:15:50" ("cl-lib") (:type git :flavor melpa :host github :repo "cask/epl" :package "epl" :local-repo "epl")) "macrostep" ("2024-12-12 15:15:50" ("cl-lib") (:type git :flavor melpa :host github :repo "emacsorphanage/macrostep" :package "macrostep" :local-repo "macrostep")) "highlight-quoted" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "Fanael/highlight-quoted" :package "highlight-quoted" :local-repo "highlight-quoted")) "edit-indirect" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "Fanael/edit-indirect" :package "edit-indirect" :local-repo "edit-indirect")) "markdown-toc" ("2024-12-12 15:15:50" ("s" "dash" "markdown-mode") (:type git :flavor melpa :host github :repo "ardumont/markdown-toc" :package "markdown-toc" :local-repo "markdown-toc")) "markdown-mode" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "jrblevin/markdown-mode" :package "markdown-mode" :local-repo "markdown-mode")) "ob-async" ("2024-12-12 15:15:50" ("async" "org" "emacs" "dash") (:type git :flavor melpa :host github :repo "astahlman/ob-async" :package "ob-async" :local-repo "ob-async")) "org" ("2024-12-12 15:15:50" ("emacs") (:host github :repo "emacs-straight/org-mode" :files (:defaults "etc") :depth 1 :build t :pre-build (progn (with-temp-file "org-loaddefs.el") (with-temp-file "org-version.el" (let ((version (with-temp-buffer (insert-file-contents (doom-path "lisp/org.el") nil 0 1024) (if (re-search-forward "^;; Version: \\([^
-]+\\)" nil t) (match-string-no-properties 1) "Unknown")))) (insert (format "(defun org-release () %S)
" version) (format "(defun org-git-version (&rest _) \"%s-??-%s\")
" version (cdr (doom-call-process "git" "rev-parse" "--short" "HEAD"))) "(provide 'org-version)
")))) :local-repo "org" :package "org" :type git)) "orgit" ("2024-12-12 15:15:50" ("emacs" "compat" "magit" "org") (:type git :flavor melpa :host github :repo "magit/orgit" :package "orgit" :local-repo "orgit")) "org-mac-link" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host gitlab :repo "aimebertrand/org-mac-link" :package "org-mac-link" :local-repo "org-mac-link")) "org-cliplink" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "rexim/org-cliplink" :package "org-cliplink" :local-repo "org-cliplink")) "toc-org" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "snosov1/toc-org" :package "toc-org" :local-repo "toc-org")) "ox-clip" ("2024-12-12 15:15:50" ("org" "htmlize") (:type git :flavor melpa :host github :repo "jkitchin/ox-clip" :package "ox-clip" :local-repo "ox-clip")) "htmlize" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "hniksic/emacs-htmlize" :package "htmlize" :local-repo "emacs-htmlize")) "org-yt" ("2024-12-12 15:15:50" nil (:host github :repo "TobiasZawada/org-yt" :package "org-yt" :type git :local-repo "org-yt")) "org-contrib" ("2024-12-12 15:15:50" ("emacs" "org") (:host github :repo "emacsmirror/org-contrib" :files (:defaults "lisp/*.el") :package "org-contrib" :type git :local-repo "org-contrib")) "company-shell" ("2024-12-12 15:15:50" ("emacs" "company" "dash" "cl-lib") (:type git :flavor melpa :host github :repo "Alexander-Miller/company-shell" :package "company-shell" :local-repo "company-shell")) "link-hint" ("2024-12-12 15:15:50" ("avy" "emacs") (:type git :flavor melpa :host github :repo "noctuid/link-hint.el" :package "link-hint" :local-repo "link-hint.el")) "drag-stuff" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "rejeep/drag-stuff.el" :package "drag-stuff" :local-repo "drag-stuff.el")) "which-key" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "justbur/emacs-which-key" :package "which-key" :local-repo "emacs-which-key")) "general" ("2024-12-12 15:16:31" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "noctuid/general.el" :package "general" :local-repo "general.el")) "project" ("2024-12-12 15:16:31" ("emacs" "xref") (:type git :host github :repo "emacs-straight/project" :files ("*" (:exclude ".git")) :package "project" :local-repo "project")) "xref" ("2024-12-12 15:16:31" ("emacs") (:type git :host github :repo "emacs-straight/xref" :files ("*" (:exclude ".git")) :package "xref" :local-repo "xref")) "projectile" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "bbatsov/projectile" :package "projectile" :local-repo "projectile")) "ws-butler" ("2024-12-12 15:16:31" ("emacs") (:host github :repo "hlissner/ws-butler" :flavor melpa :package "ws-butler" :type git :local-repo "ws-butler")) "smartparens" ("2024-12-12 15:16:31" ("dash" "cl-lib") (:type git :flavor melpa :host github :repo "Fuco1/smartparens" :package "smartparens" :local-repo "smartparens")) "helpful" ("2024-12-12 15:16:31" ("emacs" "dash" "s" "f" "elisp-refs") (:type git :flavor melpa :host github :repo "Wilfred/helpful" :package "helpful" :local-repo "helpful")) "elisp-refs" ("2024-12-12 15:16:31" ("dash" "s") (:type git :flavor melpa :files (:defaults (:exclude "elisp-refs-bench.el") "elisp-refs-pkg.el") :host github :repo "Wilfred/elisp-refs" :package "elisp-refs" :local-repo "elisp-refs")) "dtrt-indent" ("2024-12-12 15:16:31" nil (:type git :flavor melpa :host github :repo "jscheid/dtrt-indent" :package "dtrt-indent" :local-repo "dtrt-indent")) "better-jumper" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "gilbertw1/better-jumper" :package "better-jumper" :local-repo "better-jumper")) "restart-emacs" ("2024-12-12 15:16:31" nil (:type git :flavor melpa :host github :repo "iqbalansari/restart-emacs" :package "restart-emacs" :local-repo "restart-emacs")) "rainbow-delimiters" ("2024-12-12 15:16:31" nil (:type git :flavor melpa :host github :repo "Fanael/rainbow-delimiters" :package "rainbow-delimiters" :local-repo "rainbow-delimiters")) "highlight-numbers" ("2024-12-12 15:16:31" ("emacs" "parent-mode") (:type git :flavor melpa :host github :repo "Fanael/highlight-numbers" :package "highlight-numbers" :local-repo "highlight-numbers")) "hide-mode-line" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "hlissner/emacs-hide-mode-line" :package "hide-mode-line" :local-repo "emacs-hide-mode-line")) "straight" ("2024-12-12 15:16:31" ("emacs") (:host github :repo "radian-software/straight.el" :branch "develop" :local-repo "straight.el" :files ("straight*.el") :package "straight" :type git)) "gcmh" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host gitlab :repo "koral/gcmh" :package "gcmh" :local-repo "gcmh")) "auto-minor-mode" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "joewreschnig/auto-minor-mode" :package "auto-minor-mode" :local-repo "auto-minor-mode")) "use-package" ("2024-12-12 15:16:31" ("emacs" "bind-key") (:type git :flavor melpa :files (:defaults (:exclude "bind-key.el" "bind-chord.el" "use-package-chords.el" "use-package-ensure-system-package.el") "use-package-pkg.el") :host github :repo "jwiegley/use-package" :package "use-package" :local-repo "use-package")) "bind-key" ("2024-12-12 15:16:33" ("emacs") (:type git :host github :repo "emacs-straight/bind-key" :files ("*" (:exclude ".git")) :package "bind-key" :local-repo "bind-key")) "inflections" ("2024-12-12 15:15:50" ("cl-lib" "emacs") (:type git :flavor melpa :files ("inflections.el" "inflections-pkg.el") :host github :repo "eschulte/jump.el" :package "inflections" :local-repo "jump.el")) "projectile-rails" ("2024-12-12 15:15:50" ("emacs" "projectile" "inflections" "inf-ruby" "f" "rake" "dash") (:type git :flavor melpa :host github :repo "asok/projectile-rails" :package "projectile-rails" :local-repo "projectile-rails")) "inf-ruby" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "nonsequitur/inf-ruby" :package "inf-ruby" :local-repo "inf-ruby")) "rake" ("2024-12-12 15:15:50" ("f" "dash" "cl-lib") (:type git :flavor melpa :host github :repo "asok/rake" :package "rake" :local-repo "rake")) "minitest" ("2024-12-12 15:15:50" ("dash") (:type git :flavor melpa :files ("minitest.el" "snippets" "minitest-pkg.el") :host github :repo "arthurnn/minitest-emacs" :package "minitest" :local-repo "minitest-emacs")) "rspec-mode" ("2024-12-12 15:15:50" ("ruby-mode" "cl-lib") (:type git :flavor melpa :files ("rspec-mode.el" "snippets" "rspec-mode-pkg.el") :host github :repo "pezra/rspec-mode" :package "rspec-mode" :local-repo "rspec-mode")) "bundler" ("2024-12-12 15:15:50" ("inf-ruby" "cl-lib") (:type git :flavor melpa :host github :repo "endofunky/bundler.el" :package "bundler" :local-repo "bundler.el")) "robe" ("2024-12-12 15:15:50" ("inf-ruby" "emacs") (:type git :flavor melpa :files ("*robe.el" "lib" "robe-pkg.el") :host github :repo "dgutov/robe" :package "robe" :local-repo "robe")) "rubocop" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "rubocop/rubocop-emacs" :package "rubocop" :local-repo "rubocop-emacs")) "company-inf-ruby" ("2024-12-12 15:15:50" ("company" "inf-ruby" "emacs") (:type git :flavor melpa :host github :repo "company-mode/company-inf-ruby" :package "company-inf-ruby" :local-repo "company-inf-ruby")) "yard-mode" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "pd/yard-mode.el" :package "yard-mode" :local-repo "yard-mode.el")) "xref-js2" ("2024-12-12 15:15:50" ("emacs" "js2-mode") (:type git :flavor melpa :host github :repo "js-emacs/xref-js2" :package "xref-js2" :local-repo "xref-js2")) "js2-mode" ("2024-12-12 15:15:50" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "mooz/js2-mode" :package "js2-mode" :local-repo "js2-mode")) "tide" ("2024-12-12 15:16:31" ("emacs" "dash" "s" "flycheck" "cl-lib") (:type git :flavor melpa :files (:defaults "tsserver" "tide-pkg.el") :host github :repo "ananthakumaran/tide" :package "tide" :local-repo "tide")) "skewer-mode" ("2024-12-12 15:15:50" ("simple-httpd" "js2-mode" "emacs") (:type git :flavor melpa :files ("*.html" "*.js" "*.el" "skewer-mode-pkg.el") :host github :repo "skeeto/skewer-mode" :package "skewer-mode" :local-repo "skewer-mode")) "simple-httpd" ("2024-12-12 15:15:50" ("cl-lib") (:type git :flavor melpa :host github :repo "skeeto/emacs-web-server" :package "simple-httpd" :local-repo "emacs-web-server")) "nodejs-repl" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "abicky/nodejs-repl.el" :package "nodejs-repl" :local-repo "nodejs-repl.el")) "npm-mode" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "mojochao/npm-mode" :package "npm-mode" :local-repo "npm-mode")) "js2-refactor" ("2024-12-12 15:15:50" ("js2-mode" "s" "multiple-cursors" "dash" "s" "yasnippet") (:type git :flavor melpa :host github :repo "js-emacs/js2-refactor.el" :package "js2-refactor" :local-repo "js2-refactor.el")) "multiple-cursors" ("2024-12-12 15:15:50" ("cl-lib") (:type git :flavor melpa :host github :repo "magnars/multiple-cursors.el" :package "multiple-cursors" :local-repo "multiple-cursors.el")) "typescript-mode" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "emacs-typescript/typescript.el" :package "typescript-mode" :local-repo "typescript.el")) "rjsx-mode" ("2024-12-12 15:15:50" ("emacs" "js2-mode") (:type git :flavor melpa :host github :repo "felipeochoa/rjsx-mode" :package "rjsx-mode" :local-repo "rjsx-mode")) "counsel-jq" ("2024-12-12 15:15:50" ("swiper" "ivy" "emacs") (:type git :flavor melpa :host github :repo "200ok-ch/counsel-jq" :package "counsel-jq" :local-repo "counsel-jq")) "swiper" ("2024-12-12 15:15:50" ("emacs" "ivy") (:flavor melpa :files ("swiper.el" "swiper-pkg.el") :package "swiper" :local-repo "swiper" :type git :repo "abo-abo/swiper" :host github)) "ivy" ("2024-12-12 15:15:50" ("emacs") (:flavor melpa :files (:defaults "doc/ivy-help.org" (:exclude "swiper.el" "counsel.el" "ivy-hydra.el" "ivy-avy.el") "ivy-pkg.el") :package "ivy" :local-repo "swiper" :type git :repo "abo-abo/swiper" :host github)) "json-snatcher" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "Sterlingg/json-snatcher" :package "json-snatcher" :local-repo "json-snatcher")) "json-mode" ("2024-12-12 15:15:50" ("json-snatcher" "emacs") (:type git :flavor melpa :host github :repo "json-emacs/json-mode" :package "json-mode" :local-repo "json-mode")) "ivy-xref" ("2024-12-12 15:15:50" ("emacs" "ivy") (:type git :flavor melpa :host github :repo "alexmurray/ivy-xref" :package "ivy-xref" :local-repo "ivy-xref")) "volatile-highlights" ("2024-12-12 15:16:31" nil (:type git :flavor melpa :host github :repo "k-talo/volatile-highlights.el" :package "volatile-highlights" :local-repo "volatile-highlights.el")) "ligature" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "mickeynp/ligature.el" :package "ligature" :local-repo "ligature.el")) "ivy-rich" ("2024-12-12 15:15:50" ("emacs" "ivy") (:type git :flavor melpa :host github :repo "Yevgnen/ivy-rich" :package "ivy-rich" :local-repo "ivy-rich")) "counsel-projectile" ("2024-12-12 15:16:31" ("counsel" "projectile") (:type git :flavor melpa :host github :repo "ericdanan/counsel-projectile" :package "counsel-projectile" :local-repo "counsel-projectile")) "counsel" ("2024-12-12 15:15:50" ("emacs" "ivy" "swiper") (:type git :flavor melpa :files ("counsel.el" "counsel-pkg.el") :host github :repo "abo-abo/swiper" :package "counsel" :local-repo "swiper")) "amx" ("2024-12-12 15:15:50" ("emacs" "s") (:type git :flavor melpa :host github :repo "DarwinAwardWinner/amx" :package "amx" :local-repo "amx")) "ivy-avy" ("2024-12-12 15:15:50" ("emacs" "ivy" "avy") (:flavor melpa :files ("ivy-avy.el" "ivy-avy-pkg.el") :package "ivy-avy" :local-repo "swiper" :type git :repo "abo-abo/swiper" :host github)) "ivy-hydra" ("2024-12-12 15:15:50" ("emacs" "ivy" "hydra") (:flavor melpa :files ("ivy-hydra.el" "ivy-hydra-pkg.el") :package "ivy-hydra" :local-repo "swiper" :type git :repo "abo-abo/swiper" :host github)) "hydra" ("2024-12-12 15:15:50" ("cl-lib" "lv") (:type git :flavor melpa :files (:defaults (:exclude "lv.el") "hydra-pkg.el") :host github :repo "abo-abo/hydra" :package "hydra" :local-repo "hydra")) "lv" ("2024-12-12 15:15:50" nil (:flavor melpa :files ("lv.el" "lv-pkg.el") :package "lv" :local-repo "hydra" :type git :repo "abo-abo/hydra" :host github)) "all-the-icons-dired" ("2024-12-12 15:16:31" ("emacs" "all-the-icons") (:type git :flavor melpa :host github :repo "wyuenho/all-the-icons-dired" :package "all-the-icons-dired" :local-repo "all-the-icons-dired")) "all-the-icons" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :files (:defaults "data" "all-the-icons-pkg.el") :host github :repo "domtronn/all-the-icons.el" :package "all-the-icons" :local-repo "all-the-icons.el")) "auto-sudoedit" ("2024-12-12 15:16:31" ("emacs" "f") (:type git :flavor melpa :host github :repo "ncaq/auto-sudoedit" :package "auto-sudoedit" :local-repo "auto-sudoedit")) "toggle-quotes" ("2024-12-12 15:16:31" nil (:type git :flavor melpa :host github :repo "toctan/toggle-quotes.el" :package "toggle-quotes" :local-repo "toggle-quotes.el")) "dired-subtree" ("2024-12-12 15:16:31" ("dash" "dired-hacks-utils") (:type git :flavor melpa :files ("dired-subtree.el" "dired-subtree-pkg.el") :host github :repo "Fuco1/dired-hacks" :package "dired-subtree" :local-repo "dired-hacks")) "dired-hacks-utils" ("2024-12-12 15:16:31" ("dash") (:flavor melpa :files ("dired-hacks-utils.el" "dired-hacks-utils-pkg.el") :package "dired-hacks-utils" :local-repo "dired-hacks" :type git :repo "Fuco1/dired-hacks" :host github)) "highlight-indent-guides" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "DarthFennec/highlight-indent-guides" :package "highlight-indent-guides" :local-repo "highlight-indent-guides")) "gruvbox-theme" ("2024-12-12 15:16:31" ("autothemer") (:type git :flavor melpa :host github :repo "greduan/emacs-theme-gruvbox" :package "gruvbox-theme" :local-repo "emacs-theme-gruvbox")) "autothemer" ("2024-12-12 15:16:31" ("dash" "emacs") (:type git :flavor melpa :host github :repo "jasonm23/autothemer" :package "autothemer" :local-repo "autothemer")) "counsel-css" ("2024-12-12 15:15:50" ("emacs" "counsel" "cl-lib") (:type git :flavor melpa :host github :repo "hlissner/emacs-counsel-css" :package "counsel-css" :local-repo "emacs-counsel-css")) "rainbow-mode" ("2024-12-12 15:15:50" nil (:type git :host github :repo "emacs-straight/rainbow-mode" :files ("*" (:exclude ".git")) :package "rainbow-mode" :local-repo "rainbow-mode")) "sws-mode" ("2024-12-12 15:15:50" nil (:flavor melpa :files ("sws-mode.el" "sws-mode-pkg.el") :package "sws-mode" :local-repo "jade-mode" :type git :repo "brianc/jade-mode" :host github)) "stylus-mode" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :files ("stylus-mode.el" "stylus-mode-pkg.el") :host github :repo "brianc/jade-mode" :package "stylus-mode" :local-repo "jade-mode")) "sass-mode" ("2024-12-12 15:15:50" ("haml-mode" "cl-lib") (:type git :flavor melpa :host github :repo "nex3/sass-mode" :package "sass-mode" :local-repo "sass-mode")) "haml-mode" ("2024-12-12 15:15:50" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "nex3/haml-mode" :package "haml-mode" :local-repo "haml-mode")) "company-web" ("2024-12-12 15:15:50" ("company" "dash" "cl-lib" "web-completion-data") (:type git :flavor melpa :host github :repo "osv/company-web" :package "company-web" :local-repo "company-web")) "web-completion-data" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :files ("*.el" "html-stuff" "web-completion-data-pkg.el") :host github :repo "osv/web-completion-data" :package "web-completion-data" :local-repo "web-completion-data")) "web-mode" ("2024-12-12 15:15:50" ("emacs") (:type git :flavor melpa :host github :repo "fxbois/web-mode" :package "web-mode" :local-repo "web-mode")) "slim-mode" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "slim-template/emacs-slim" :package "slim-mode" :local-repo "emacs-slim")) "pug-mode" ("2024-12-12 15:15:50" ("emacs" "cl-lib") (:type git :flavor melpa :host github :repo "hlissner/emacs-pug-mode" :package "pug-mode" :local-repo "emacs-pug-mode")) "emmet-mode" ("2024-12-12 15:15:50" nil (:type git :flavor melpa :host github :repo "smihica/emmet-mode" :package "emmet-mode" :local-repo "emmet-mode")) "prettier-js" ("2024-12-12 15:16:31" nil (:type git :flavor melpa :host github :repo "prettier/prettier-emacs" :package "prettier-js" :local-repo "prettier-emacs")) "browse-kill-ring" ("2024-12-12 15:16:31" nil (:type git :flavor melpa :host github :repo "browse-kill-ring/browse-kill-ring" :package "browse-kill-ring" :local-repo "browse-kill-ring")) "comment-dwim-2" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "remyferre/comment-dwim-2" :package "comment-dwim-2" :local-repo "comment-dwim-2")) "ace-window" ("2024-12-12 15:16:31" ("avy") (:type git :flavor melpa :host github :repo "abo-abo/ace-window" :package "ace-window" :local-repo "ace-window")) "crux" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "bbatsov/crux" :package "crux" :local-repo "crux")) "key-chord" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "emacsorphanage/key-chord" :package "key-chord" :local-repo "key-chord")) "smex" ("2024-12-12 15:16:31" ("emacs") (:type git :flavor melpa :host github :repo "nonsequitur/smex" :package "smex" :local-repo "smex")) "flx" ("2024-12-12 15:16:31" ("cl-lib") (:type git :flavor melpa :files ("flx.el" "flx-pkg.el") :host github :repo "lewang/flx" :package "flx" :local-repo "flx")) "hlinum" ("2024-12-12 15:16:31" ("cl-lib") (:type git :flavor melpa :host github :repo "tom-tan/hlinum-mode" :package "hlinum" :local-repo "hlinum-mode")) "redo" ("2024-12-12 15:16:31" nil (:type git :host github :repo "emacsattic/redo" :package "redo" :local-repo "redo")) "keychain-environment" ("2024-12-12 15:16:31" nil (:type git :flavor melpa :host github :repo "tarsius/keychain-environment" :package "keychain-environment" :local-repo "keychain-environment")) "auto-complete" ("2024-12-12 15:16:31" ("popup" "cl-lib") (:type git :flavor melpa :files ("*.el" "dict" "auto-complete-pkg.el") :host github :repo "auto-complete/auto-complete" :package "auto-complete" :local-repo "auto-complete"))))

#s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data ())

#s(hash-table size 65 test eq rehash-size 1.5 rehash-threshold 0.8125 data (org-elpa #s(hash-table size 145 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 15 "use-package" nil "auto-minor-mode" nil "gcmh" nil "straight" nil "nerd-icons" nil "hide-mode-line" nil "highlight-numbers" nil "rainbow-delimiters" nil "restart-emacs" nil "better-jumper" nil "dtrt-indent" nil "helpful" nil "pcre2el" nil "smartparens" nil "ws-butler" nil "projectile" nil "project" nil "general" nil "which-key" nil "compat" nil "wgrep" nil "tide" nil "multiple-cursors" nil "expand-region" nil "counsel-projectile" nil "company" nil "volatile-highlights" nil "inf-ruby" nil "company-dict" nil "swiper" nil "amx" nil "ivy-rich" nil "vertico" nil "orderless" nil "consult" nil "consult-dir" nil "consult-flycheck" nil "embark" nil "embark-consult" nil "marginalia" nil "doom-themes" nil "solaire-mode" nil "hl-todo" nil "ligature" nil "doom-modeline" nil "anzu" nil "git-gutter-fringe" nil "vi-tilde-fringe" nil "yasnippet" nil "vimish-fold" nil "auto-yasnippet" nil "doom-snippets" nil "diredfl" nil "dired-git-info" nil "dired-rsync" nil "fd-dired" nil "undo-fu" nil "undo-fu-session" nil "vundo" nil "browse-at-remote" nil "git-commit" nil "git-timemachine" nil "git-modes" nil "flycheck" nil "flycheck-popup-tip" nil "quickrun" nil "eros" nil "dumb-jump" nil "ivy-xref" nil "request" nil "magit" nil "magit-todos" nil "ns-auto-titlebar" nil "highlight-quoted" nil "macrostep" nil "overseer" nil "elisp-def" nil "elisp-demos" nil "flycheck-package" nil "flycheck-cask" nil "buttercup" nil "json-mode" nil "json-snatcher" nil "counsel-jq" nil "rjsx-mode" nil "typescript-mode" nil "js2-refactor" nil "npm-mode" nil "nodejs-repl" nil "skewer-mode" nil "xref-js2" nil "markdown-mode" nil "markdown-toc" nil "edit-indirect" nil "org" (org :type git :repo "emacs-straight/org-mode" :local-repo "org" :depth 1 :pre-build (progn (with-temp-file "org-loaddefs.el") (with-temp-file "org-version.el" (let ((version (with-temp-buffer (insert-file-contents (doom-path "lisp/org.el") nil 0 1024) (if (re-search-forward "^;; Version: \\([^
-]+\\)" nil t) (match-string-no-properties 1) "Unknown")))) (insert (format "(defun org-release () %S)
" version) (format "(defun org-git-version (&rest _) \"%s-??-%s\")
" version (cdr (doom-call-process "git" "rev-parse" "--short" "HEAD"))) "(provide 'org-version)
")))) :build t :files (:defaults "etc") :host github) "org-contrib" (org-contrib :type git :includes (ob-csharp ob-eukleides ob-fomus ob-julia ob-mathomatic ob-oz ob-stata ob-tcl ob-vbnet ol-bookmark ol-elisp-symbol ol-git-link ol-man ol-mew ol-vm ol-wl org-annotate-file org-bibtex-extras org-checklist org-choose org-collector org-contribdir org-depend org-effectiveness org-eldoc org-eval org-eval-light org-expiry org-interactive-query org-invoice org-learn org-license org-mac-iCal org-mairix org-panel org-registry org-screen org-screenshot org-secretary org-static-mathjax org-sudoku orgtbl-sqlinsert org-toc org-track org-wikinodes ox-bibtex ox-confluence ox-deck ox-extra ox-freemind ox-groff ox-koma-letter ox-s5 ox-taskjuggler) :repo "emacsmirror/org-contrib" :files (:defaults "lisp/*.el") :host github) "avy" nil "htmlize" nil "org-yt" nil "ox-clip" nil "toc-org" nil "org-cliplink" nil "org-mac-link" nil "orgit" nil "ob-async" nil "yard-mode" nil "company-inf-ruby" nil "rubocop" nil "robe" nil "bundler" nil "rake" nil "rspec-mode" nil "minitest" nil "projectile-rails" nil "inflections" nil "company-shell" nil "emmet-mode" nil "haml-mode" nil "pug-mode" nil "slim-mode" nil "web-mode" nil "company-web" nil "sass-mode" nil "stylus-mode" nil "sws-mode" nil "rainbow-mode" nil "counsel-css" nil "drag-stuff" nil "link-hint" nil "autothemer" nil "all-the-icons" nil "dired-hacks-utils" nil "xref" nil "elisp-refs" nil "bind-key" nil "ruby-mode" nil)) melpa #s(hash-table size 145 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 2 "use-package" nil "auto-minor-mode" (auto-minor-mode :type git :flavor melpa :host github :repo "joewreschnig/auto-minor-mode") "gcmh" (gcmh :type git :flavor melpa :host gitlab :repo "koral/gcmh") "straight" nil "nerd-icons" (nerd-icons :type git :flavor melpa :files (:defaults "data" "nerd-icons-pkg.el") :host github :repo "rainstormstudio/nerd-icons.el") "hide-mode-line" (hide-mode-line :type git :flavor melpa :host github :repo "hlissner/emacs-hide-mode-line") "highlight-numbers" (highlight-numbers :type git :flavor melpa :host github :repo "Fanael/highlight-numbers") "rainbow-delimiters" (rainbow-delimiters :type git :flavor melpa :host github :repo "Fanael/rainbow-delimiters") "restart-emacs" (restart-emacs :type git :flavor melpa :host github :repo "iqbalansari/restart-emacs") "better-jumper" (better-jumper :type git :flavor melpa :host github :repo "gilbertw1/better-jumper") "dtrt-indent" (dtrt-indent :type git :flavor melpa :host github :repo "jscheid/dtrt-indent") "helpful" (helpful :type git :flavor melpa :host github :repo "Wilfred/helpful") "pcre2el" (pcre2el :type git :flavor melpa :host github :repo "joddie/pcre2el") "smartparens" (smartparens :type git :flavor melpa :host github :repo "Fuco1/smartparens") "ws-butler" (ws-butler :type git :flavor melpa :host github :repo "hlissner/ws-butler") "projectile" (projectile :type git :flavor melpa :host github :repo "bbatsov/projectile") "project" nil "general" (general :type git :flavor melpa :host github :repo "noctuid/general.el") "which-key" (which-key :type git :flavor melpa :host github :repo "justbur/emacs-which-key") "compat" nil "wgrep" (wgrep :type git :flavor melpa :files ("wgrep.el" "wgrep-pkg.el") :host github :repo "mhayashi1120/Emacs-wgrep") "tide" (tide :type git :flavor melpa :files (:defaults "tsserver" "tide-pkg.el") :host github :repo "ananthakumaran/tide") "multiple-cursors" (multiple-cursors :type git :flavor melpa :host github :repo "magnars/multiple-cursors.el") "expand-region" (expand-region :type git :flavor melpa :host github :repo "magnars/expand-region.el") "counsel-projectile" (counsel-projectile :type git :flavor melpa :host github :repo "ericdanan/counsel-projectile") "company" (company :type git :flavor melpa :files (:defaults "icons" ("images/small" "doc/images/small/*.png") "company-pkg.el") :host github :repo "company-mode/company-mode") "volatile-highlights" (volatile-highlights :type git :flavor melpa :host github :repo "k-talo/volatile-highlights.el") "inf-ruby" (inf-ruby :type git :flavor melpa :host github :repo "nonsequitur/inf-ruby") "company-dict" (company-dict :type git :flavor melpa :host github :repo "hlissner/emacs-company-dict") "swiper" (swiper :type git :flavor melpa :files ("swiper.el" "swiper-pkg.el") :host github :repo "abo-abo/swiper") "amx" (amx :type git :flavor melpa :host github :repo "DarwinAwardWinner/amx") "ivy-rich" (ivy-rich :type git :flavor melpa :host github :repo "Yevgnen/ivy-rich") "vertico" (vertico :type git :flavor melpa :files (:defaults "extensions/vertico-*.el" "vertico-pkg.el") :host github :repo "minad/vertico") "orderless" (orderless :type git :flavor melpa :host github :repo "oantolin/orderless") "consult" (consult :type git :flavor melpa :host github :repo "minad/consult") "consult-dir" (consult-dir :type git :flavor melpa :host github :repo "karthink/consult-dir") "consult-flycheck" (consult-flycheck :type git :flavor melpa :host github :repo "minad/consult-flycheck") "embark" (embark :type git :flavor melpa :files ("embark.el" "embark-org.el" "embark.texi" "embark-pkg.el") :host github :repo "oantolin/embark") "embark-consult" (embark-consult :type git :flavor melpa :files ("embark-consult.el" "embark-consult-pkg.el") :host github :repo "oantolin/embark") "marginalia" (marginalia :type git :flavor melpa :host github :repo "minad/marginalia") "doom-themes" (doom-themes :type git :flavor melpa :files (:defaults "themes/*.el" "themes/*/*.el" "extensions/*.el" "doom-themes-pkg.el") :host github :repo "doomemacs/themes") "solaire-mode" (solaire-mode :type git :flavor melpa :host github :repo "hlissner/emacs-solaire-mode") "hl-todo" (hl-todo :type git :flavor melpa :host github :repo "tarsius/hl-todo") "ligature" (ligature :type git :flavor melpa :host github :repo "mickeynp/ligature.el") "doom-modeline" (doom-modeline :type git :flavor melpa :host github :repo "seagle0128/doom-modeline") "anzu" (anzu :type git :flavor melpa :host github :repo "emacsorphanage/anzu") "git-gutter-fringe" (git-gutter-fringe :type git :flavor melpa :host github :repo "emacsorphanage/git-gutter-fringe") "vi-tilde-fringe" (vi-tilde-fringe :type git :flavor melpa :host github :repo "syl20bnr/vi-tilde-fringe") "yasnippet" (yasnippet :type git :flavor melpa :files ("yasnippet.el" "snippets" "yasnippet-pkg.el") :host github :repo "joaotavora/yasnippet") "vimish-fold" (vimish-fold :type git :flavor melpa :host github :repo "matsievskiysv/vimish-fold") "auto-yasnippet" (auto-yasnippet :type git :flavor melpa :host github :repo "abo-abo/auto-yasnippet") "doom-snippets" nil "diredfl" (diredfl :type git :flavor melpa :host github :repo "purcell/diredfl") "dired-git-info" nil "dired-rsync" (dired-rsync :type git :flavor melpa :files ("dired-rsync.el" "dired-rsync-pkg.el") :host github :repo "stsquad/dired-rsync") "fd-dired" (fd-dired :type git :flavor melpa :host github :repo "yqrashawn/fd-dired") "undo-fu" (undo-fu :type git :flavor melpa :host codeberg :repo "ideasman42/emacs-undo-fu") "undo-fu-session" (undo-fu-session :type git :flavor melpa :host codeberg :repo "ideasman42/emacs-undo-fu-session") "vundo" nil "browse-at-remote" (browse-at-remote :type git :flavor melpa :host github :repo "rmuslimov/browse-at-remote") "git-commit" (git-commit :type git :flavor melpa :branch "legacy-stub" :host github :repo "magit/magit") "git-timemachine" (git-timemachine :type git :flavor melpa :host github :repo "emacsmirror/git-timemachine") "git-modes" (git-modes :type git :flavor melpa :host github :repo "magit/git-modes") "flycheck" (flycheck :type git :flavor melpa :host github :repo "flycheck/flycheck") "flycheck-popup-tip" (flycheck-popup-tip :type git :flavor melpa :host github :repo "flycheck/flycheck-popup-tip") "quickrun" (quickrun :type git :flavor melpa :host github :repo "emacsorphanage/quickrun") "eros" (eros :type git :flavor melpa :host github :repo "xiongtx/eros") "dumb-jump" (dumb-jump :type git :flavor melpa :host github :repo "jacktasia/dumb-jump") "ivy-xref" (ivy-xref :type git :flavor melpa :host github :repo "alexmurray/ivy-xref") "request" (request :type git :flavor melpa :files ("request.el" "request-pkg.el") :host github :repo "tkf/emacs-request") "magit" (magit :type git :flavor melpa :files ("lisp/magit*.el" "lisp/git-*.el" "docs/magit.texi" "docs/AUTHORS.md" "LICENSE" "magit-pkg.el" (:exclude "lisp/magit-section.el") "magit-pkg.el") :host github :repo "magit/magit") "magit-todos" (magit-todos :type git :flavor melpa :host github :repo "alphapapa/magit-todos") "ns-auto-titlebar" (ns-auto-titlebar :type git :flavor melpa :host github :repo "purcell/ns-auto-titlebar") "highlight-quoted" (highlight-quoted :type git :flavor melpa :host github :repo "Fanael/highlight-quoted") "macrostep" (macrostep :type git :flavor melpa :host github :repo "emacsorphanage/macrostep") "overseer" (overseer :type git :flavor melpa :host github :repo "tonini/overseer.el") "elisp-def" (elisp-def :type git :flavor melpa :host github :repo "Wilfred/elisp-def") "elisp-demos" (elisp-demos :type git :flavor melpa :files (:defaults "*.org" "elisp-demos-pkg.el") :host github :repo "xuchunyang/elisp-demos") "flycheck-package" (flycheck-package :type git :flavor melpa :host github :repo "purcell/flycheck-package") "flycheck-cask" (flycheck-cask :type git :flavor melpa :host github :repo "flycheck/flycheck-cask") "buttercup" (buttercup :type git :flavor melpa :files (:defaults "bin" "buttercup-pkg.el") :host github :repo "jorgenschaefer/emacs-buttercup") "json-mode" (json-mode :type git :flavor melpa :host github :repo "json-emacs/json-mode") "json-snatcher" (json-snatcher :type git :flavor melpa :host github :repo "Sterlingg/json-snatcher") "counsel-jq" (counsel-jq :type git :flavor melpa :host github :repo "200ok-ch/counsel-jq") "rjsx-mode" (rjsx-mode :type git :flavor melpa :host github :repo "felipeochoa/rjsx-mode") "typescript-mode" (typescript-mode :type git :flavor melpa :host github :repo "emacs-typescript/typescript.el") "js2-refactor" (js2-refactor :type git :flavor melpa :host github :repo "js-emacs/js2-refactor.el") "npm-mode" (npm-mode :type git :flavor melpa :host github :repo "mojochao/npm-mode") "nodejs-repl" (nodejs-repl :type git :flavor melpa :host github :repo "abicky/nodejs-repl.el") "skewer-mode" (skewer-mode :type git :flavor melpa :files ("*.html" "*.js" "*.el" "skewer-mode-pkg.el") :host github :repo "skeeto/skewer-mode") "xref-js2" (xref-js2 :type git :flavor melpa :host github :repo "js-emacs/xref-js2") "markdown-mode" (markdown-mode :type git :flavor melpa :host github :repo "jrblevin/markdown-mode") "markdown-toc" (markdown-toc :type git :flavor melpa :host github :repo "ardumont/markdown-toc") "edit-indirect" (edit-indirect :type git :flavor melpa :host github :repo "Fanael/edit-indirect") "avy" (avy :type git :flavor melpa :host github :repo "abo-abo/avy") "htmlize" (htmlize :type git :flavor melpa :host github :repo "hniksic/emacs-htmlize") "org-yt" nil "ox-clip" (ox-clip :type git :flavor melpa :host github :repo "jkitchin/ox-clip") "toc-org" (toc-org :type git :flavor melpa :host github :repo "snosov1/toc-org") "org-cliplink" (org-cliplink :type git :flavor melpa :host github :repo "rexim/org-cliplink") "org-mac-link" (org-mac-link :type git :flavor melpa :host gitlab :repo "aimebertrand/org-mac-link") "orgit" (orgit :type git :flavor melpa :host github :repo "magit/orgit") "ob-async" (ob-async :type git :flavor melpa :host github :repo "astahlman/ob-async") "yard-mode" (yard-mode :type git :flavor melpa :host github :repo "pd/yard-mode.el") "company-inf-ruby" (company-inf-ruby :type git :flavor melpa :host github :repo "company-mode/company-inf-ruby") "rubocop" (rubocop :type git :flavor melpa :host github :repo "rubocop/rubocop-emacs") "robe" (robe :type git :flavor melpa :files ("*robe.el" "lib" "robe-pkg.el") :host github :repo "dgutov/robe") "bundler" (bundler :type git :flavor melpa :host github :repo "endofunky/bundler.el") "rake" (rake :type git :flavor melpa :host github :repo "asok/rake") "rspec-mode" (rspec-mode :type git :flavor melpa :files ("rspec-mode.el" "snippets" "rspec-mode-pkg.el") :host github :repo "pezra/rspec-mode") "minitest" (minitest :type git :flavor melpa :files ("minitest.el" "snippets" "minitest-pkg.el") :host github :repo "arthurnn/minitest-emacs") "projectile-rails" (projectile-rails :type git :flavor melpa :host github :repo "asok/projectile-rails") "inflections" (inflections :type git :flavor melpa :files ("inflections.el" "inflections-pkg.el") :host github :repo "eschulte/jump.el") "company-shell" (company-shell :type git :flavor melpa :host github :repo "Alexander-Miller/company-shell") "emmet-mode" (emmet-mode :type git :flavor melpa :host github :repo "smihica/emmet-mode") "haml-mode" (haml-mode :type git :flavor melpa :host github :repo "nex3/haml-mode") "pug-mode" (pug-mode :type git :flavor melpa :host github :repo "hlissner/emacs-pug-mode") "slim-mode" (slim-mode :type git :flavor melpa :host github :repo "slim-template/emacs-slim") "web-mode" (web-mode :type git :flavor melpa :host github :repo "fxbois/web-mode") "company-web" (company-web :type git :flavor melpa :host github :repo "osv/company-web") "sass-mode" (sass-mode :type git :flavor melpa :host github :repo "nex3/sass-mode") "stylus-mode" (stylus-mode :type git :flavor melpa :files ("stylus-mode.el" "stylus-mode-pkg.el") :host github :repo "brianc/jade-mode") "sws-mode" (sws-mode :type git :flavor melpa :files ("sws-mode.el" "sws-mode-pkg.el") :host github :repo "brianc/jade-mode") "rainbow-mode" nil "counsel-css" (counsel-css :type git :flavor melpa :host github :repo "hlissner/emacs-counsel-css") "drag-stuff" (drag-stuff :type git :flavor melpa :host github :repo "rejeep/drag-stuff.el") "link-hint" (link-hint :type git :flavor melpa :host github :repo "noctuid/link-hint.el") "autothemer" (autothemer :type git :flavor melpa :host github :repo "jasonm23/autothemer") "all-the-icons" (all-the-icons :type git :flavor melpa :files (:defaults "data" "all-the-icons-pkg.el") :host github :repo "domtronn/all-the-icons.el") "dired-hacks-utils" (dired-hacks-utils :type git :flavor melpa :files ("dired-hacks-utils.el" "dired-hacks-utils-pkg.el") :host github :repo "Fuco1/dired-hacks") "xref" nil "elisp-refs" (elisp-refs :type git :flavor melpa :files (:defaults (:exclude "elisp-refs-bench.el") "elisp-refs-pkg.el") :host github :repo "Wilfred/elisp-refs") "bind-key" nil "ruby-mode" nil)) nongnu-elpa #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 4 "use-package" nil "straight" nil "project" nil "compat" nil "doom-snippets" nil "dired-git-info" nil "vundo" nil "org-yt" nil "rainbow-mode" nil "xref" nil "bind-key" nil "ruby-mode" nil)) gnu-elpa-mirror #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 3 "use-package" (use-package :type git :host github :repo "emacs-straight/use-package" :files ("*" (:exclude ".git"))) "straight" nil "project" (project :type git :host github :repo "emacs-straight/project" :files ("*" (:exclude ".git"))) "compat" (compat :type git :host github :repo "emacs-compat/compat" :files ("*" (:exclude ".git"))) "doom-snippets" nil "dired-git-info" (dired-git-info :type git :host github :repo "emacs-straight/dired-git-info" :files ("*" (:exclude ".git"))) "vundo" (vundo :type git :host github :repo "emacs-straight/vundo" :files ("*" (:exclude ".git"))) "org-yt" nil "rainbow-mode" (rainbow-mode :type git :host github :repo "emacs-straight/rainbow-mode" :files ("*" (:exclude ".git"))) "xref" (xref :type git :host github :repo "emacs-straight/xref" :files ("*" (:exclude ".git"))) "bind-key" (bind-key :type git :host github :repo "emacs-straight/bind-key" :files ("*" (:exclude ".git"))) "ruby-mode" nil)) el-get #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 2 "straight" nil "doom-snippets" nil "org-yt" nil "ruby-mode" nil)) emacsmirror-mirror #s(hash-table size 65 test equal rehash-size 1.5 rehash-threshold 0.8125 data (version 2 "straight" (straight :type git :host github :repo "radian-software/straight.el" :branch "develop" :local-repo "straight.el" :files ("straight*.el")) "doom-snippets" nil "org-yt" nil "ruby-mode" nil))))

("bind-key" "elisp-refs" "xref" "dired-hacks-utils" "all-the-icons" "autothemer" "parent-mode" "lv" "hydra" "shrink-path" "fringe-helper" "git-gutter" "ht" "popup" "epl" "pkg-info" "let-alist" "package-lint" "simple-httpd" "js2-mode" "magit-section" "with-editor" "transient" "seq" "async" "ruby-mode" "s" "web-completion-data" "dash" "cl-lib" "emacs" "link-hint" "drag-stuff" "counsel-css" "rainbow-mode" "sws-mode" "stylus-mode" "sass-mode" "company-web" "web-mode" "slim-mode" "pug-mode" "haml-mode" "emmet-mode" "company-shell" "inflections" "projectile-rails" "minitest" "rspec-mode" "rake" "bundler" "robe" "rubocop" "company-inf-ruby" "yard-mode" "ob-async" "orgit" "org-mac-link" "org-cliplink" "toc-org" "ox-clip" "org-yt" "htmlize" "avy" "org-contrib" "org" "edit-indirect" "markdown-toc" "markdown-mode" "xref-js2" "skewer-mode" "nodejs-repl" "npm-mode" "js2-refactor" "typescript-mode" "rjsx-mode" "counsel-jq" "json-snatcher" "json-mode" "buttercup" "flycheck-cask" "flycheck-package" "elisp-demos" "elisp-def" "overseer" "macrostep" "highlight-quoted" "ns-auto-titlebar" "magit-todos" "magit" "request" "ivy-xref" "dumb-jump" "eros" "quickrun" "flycheck-popup-tip" "flycheck" "git-modes" "git-timemachine" "git-commit" "browse-at-remote" "vundo" "undo-fu-session" "undo-fu" "fd-dired" "dired-rsync" "dired-git-info" "diredfl" "doom-snippets" "auto-yasnippet" "vimish-fold" "yasnippet" "vi-tilde-fringe" "git-gutter-fringe" "anzu" "doom-modeline" "ligature" "hl-todo" "solaire-mode" "doom-themes" "marginalia" "embark-consult" "embark" "consult-flycheck" "consult-dir" "consult" "orderless" "vertico" "ivy-rich" "amx" "ivy-avy" "ivy-hydra" "ivy" "swiper" "company-dict" "inf-ruby" "auto-complete" "keychain-environment" "redo" "volatile-highlights" "paren" "hlinum" "f" "smex" "flx" "company" "counsel-projectile" "counsel" "browse-kill-ring" "comment-dwim-2" "ace-window" "expand-region" "multiple-cursors" "crux" "key-chord" "prettier-js" "tide" "whitespace" "highlight-indent-guides" "gruvbox-theme" "wgrep" "all-the-icons-dired" "auto-sudoedit" "toggle-quotes" "dired-subtree" "compat" "which-key" "general" "project" "projectile" "ws-butler" "smartparens" "pcre2el" "helpful" "dtrt-indent" "better-jumper" "restart-emacs" "rainbow-delimiters" "highlight-numbers" "hide-mode-line" "nerd-icons" "straight" "gcmh" "auto-minor-mode" "use-package" "emacsmirror-mirror" "el-get" "gnu-elpa-mirror" "nongnu-elpa" "melpa" "org-elpa")

t
